<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="jakarta.faces.html"
                xmlns:ui="jakarta.faces.facelets"
                xmlns:f="jakarta.faces.core"
                template="/resources/templates/tables-template.xhtml"
                xmlns:p="http://primefaces.org/ui">

    <ui:define name="title">Part</ui:define>

    <ui:define name="style">
        <!--suppress CssUnusedSymbol -->
        <style>
            /* green background color */
            body {background-color: rgba(104, 159, 56, 0.04)}

            /* green table border */
            .wrapper {border: 3px double #689f38;}

            /* green table header */
            th {
                color: white !important;
                background-color: #689f38 !important;
            }

            /* green table footer */
            footer {
                color: white;
                background-color: #689f38;
            }
        </style>
    </ui:define>

    <!-- header bar logo -->
    <ui:define name="logo">
        <!-- green logo specific to the supplier.xhtml -->
        <p:link title="Employee - Home" href="./index.xhtml">
            <p:graphicImage library="images" name="logo_horizontal_green.png" height="45px"/>
        </p:link>
        <p:spacer width="20px"/>
        <i class="pi pi-bars mr-2" style="color: #689f38"/>
    </ui:define>

    <!-- add botton and popup dialog for adding records to the database -->
    <ui:define name="add_button">
        <!-- The commandButton displays the dialog oncomplete and after the AJAX update. -->
        <p:commandButton value="Add Part" icon="pi pi-plus-circle" oncomplete="PF('create').show()"
                         styleClass="ui-button-outlined ui-button-raised">
            <!-- AJAX updates the dialog components to ensure no previous data is present for prior records. -->
            <p:ajax update="create" resetValues="true"/>
        </p:commandButton>
        <p:dialog id="create" widgetVar="create" header="Add Part" modal="true">
            <p:panelGrid columns="2" columnClasses="c-col1, c-col2">
                <p:outputLabel value="Name" styleClass="c-label"/>
                <p:inputText value="#{partBean.createPart.name}" maxlength="30"
                             validator="#{partBean.validateRequired}"/>
                <p:outputLabel value="Category" styleClass="c-label"/>
                <p:inputText value="#{partBean.createPart.category}" maxlength="20"
                             validator="#{partBean.validateRequired}"/>
                <p:outputLabel value="Location" styleClass="c-label"/>
                <p:inputText value="#{partBean.createPart.location}" maxlength="30"
                             validator="#{partBean.validateRequired}"/>
            </p:panelGrid>
            <!-- The commandButton updates the main datatable after record insertion to display the added record. -->
            <p:commandButton id="insert" value="Insert Part" action="#{partBean.create()}"
                             update="datatable messages" styleClass="c-button"/>
        </p:dialog>
    </ui:define>

    <!-- search box and popup dialog to display search results -->
    <ui:define name="search">
        <p:toolbarGroup align="right">
            <h:form>
                <!-- The search box sets the id field of a Part. -->
                <p:inputNumber id="search_box" placeholder="Find Part" title="Search by ID"
                               value="#{partBean.readPart.id}" modifyValueOnWheel="false"/>
                <!-- The read() method called by the commandButton uses the supplied id to search for a matching
                record in the database. -->
                <p:commandButton icon="pi pi-search" action="#{partBean.read()}" styleClass="ui-button-raised"
                                 update="search_box messages" style="display: inline"/>
                <!-- If a matching record is found, the dialog is displayed containing the requested record. -->
                <p:dialog id="search" widgetVar="search" header="Search Result" modal="true" closeOnEscape="true">
                    <p:panelGrid columns="3" columnClasses="r-col1, r-col2, r-col3">
                        <p:column>
                            <p:outputLabel value="Name" styleClass="r-label"/>
                            <p:outputLabel value="#{partBean.readPart.name}" styleClass="r-content"/>
                        </p:column>
                        <p:column>
                            <p:outputLabel value="Category" styleClass="r-label"/>
                            <p:outputLabel value="#{partBean.readPart.category}" styleClass="r-content"/>
                        </p:column>
                        <p:column>
                            <p:outputLabel value="Location" styleClass="r-label"/>
                            <p:outputLabel value="#{partBean.readPart.location}" styleClass="r-content"/>
                        </p:column>
                    </p:panelGrid>
                </p:dialog>
            </h:form>
        </p:toolbarGroup>
    </ui:define>

    <!-- main datatable containing the records of the part table -->
    <ui:define name="table">
        <p:dataTable id="part_table" editable="true" value="#{partBean.parts}" var="part"
                     showGridlines="true" rowIndexVar="i" reflow="true" paginator="true"
                     paginatorAlwaysVisible="false" paginatorPosition="bottom" rows="5"
                     paginatorTemplate="{FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}">
            <p:column headerText="ID" sortBy="#{part.id}">
                <p:cellEditor>
                    <f:facet name="output"><p:outputLabel value="#{part.id}"/></f:facet>
                    <f:facet name="input">
                        <!-- The id validator checks for an empty field and also stores the current value of the
                        field before update. This perserves the id for the SQL WHERE clause in the event of an id
                        update. -->
                        <p:inputNumber value="#{part.id}" validator="#{partBean.validateID}"
                                       modifyValueOnWheel="false"/>
                    </f:facet>
                </p:cellEditor>
            </p:column>
            <p:column headerText="Name" sortBy="#{part.name}">
                <p:cellEditor>
                    <f:facet name="output"><p:outputLabel value="#{part.name}"/></f:facet>
                    <f:facet name="input">
                        <p:inputText value="#{part.name}" maxlength="30" validator="#{partBean.validateRequired}"/>
                    </f:facet>
                </p:cellEditor>
            </p:column>
            <p:column headerText="Category" sortBy="#{part.category}">
                <p:cellEditor>
                    <f:facet name="output"><p:outputLabel value="#{part.category}"/></f:facet>
                    <f:facet name="input">
                        <p:inputText value="#{part.category}" maxlength="20" validator="#{partBean.validateRequired}"/>
                    </f:facet>
                </p:cellEditor>
            </p:column>
            <p:column headerText="Location" sortBy="#{part.location}">
                <p:cellEditor>
                    <f:facet name="output"><p:outputLabel value="#{part.location}"/></f:facet>
                    <f:facet name="input">
                        <p:inputText value="#{part.location}" maxlength="30" validator="#{partBean.validateRequired}"/>
                    </f:facet>
                </p:cellEditor>
            </p:column>
            <!-- The showDeleteDialog(Part) method updates the contents of the dialog based on the part
                to include the number of records that will be removed from the SPJ table as a result of cascade on
                delete. -->
            <p:column styleClass="updateCol"><p:rowEditor styleClass="row-editor"/>
                <p:commandButton process="@this" action="#{partBean.showDeleteDialog(part)}"
                                 styleClass="ui-button-raised ui-button-danger delete-button" icon="pi pi-trash"/>
                <p:dialog id="confirm" widgetVar="delete" header="Delete Part" modal="true" closeOnEscape="true"
                          styleClass="left">
                    <!-- The deleteConfirm() method retuns the content of the dialog. -->
                    <p:outputLabel value="#{partBean.deleteConfirm()}" escape="false"/>
                    <div class="confirm-buttons">
                        <p:commandButton value="Cancel" styleClass="ui-button-flat ui-button-plain"
                                         action="#{partBean.deleteCancel()}" onclick="PF('delete').hide()"/>
                        <p:spacer width="5px"/>
                        <p:commandButton value="Confirm" styleClass="ui-button-raised ui-button-danger"
                                         action="#{partBean.delete()}" onclick="PF('delete').hide()"
                                         update="part_table messages"/>
                    </div>
                </p:dialog>
            </p:column>
            <!-- AJAX handles the rowEdit events. The var 'i' corresponds to the datatable row being edited which
            corresponds to the same element in the list of parts. -->
            <!--suppress ELValidationInspection -->
            <p:ajax event="rowEdit" listener="#{partBean.update(i)}" update="messages part_table"/>
            <p:ajax event="rowEditCancel" listener="#{partBean.updateCancel}" update="messages part_table"/>
        </p:dataTable>
    </ui:define>

</ui:composition>